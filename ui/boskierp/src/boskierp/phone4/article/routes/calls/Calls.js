import React, { useEffect, useState } from 'react'
import { Link, useNavigate } from "react-router-dom";
import sendMessage from '../../../../Api'


export default function Messages(props) {
    const navigate = useNavigate();
    const [calls, setCalls] = useState(props.calls || [])

    useEffect(() => {
        setCalls(props.calls)
    }, [props.calls])

    // useEffect(() => {
    //     sendMessage('phone_get_calls')
    // }, [])

    useEffect(() => {
        const fn = async () => {
            const contacts2 = await sendMessage('phone_get_calls')
            setCalls(contacts2)
        }
        fn()
    }, [])

    const submit = (e) => {
        e.preventDefault()
        let { value } = e.target[0]

        navigate('/call/' + value + '/true')
    }

    const getIcon = (v) => {
        if (v.type === 'missed') {
            return <svg fill="currentColor" className="w-full h-full " viewBox="0 0 56 56" xmlns="http://www.w3.org/2000/svg">

                <path xmlns="http://www.w3.org/2000/svg" d="M 34.8202 9.1446 L 38.3592 9.1446 L 45.2499 8.7695 L 41.3124 12.3555 L 31.2343 22.4805 C 30.8358 22.8555 30.6718 23.2774 30.6718 23.7695 C 30.6718 24.6836 31.4218 25.3867 32.4296 25.3867 C 32.8983 25.3867 33.2968 25.2461 33.6483 24.8946 L 43.7265 14.7695 L 47.3124 10.8789 L 46.9374 17.7461 L 46.9374 21.2383 C 46.9374 22.1524 47.6171 22.8555 48.5309 22.9024 C 49.4688 22.9492 50.2892 22.1992 50.2892 21.2383 L 50.2892 7.6680 C 50.2892 6.4258 49.6796 5.7930 48.4373 5.7930 L 34.8202 5.7930 C 33.8592 5.7930 33.0858 6.5899 33.1327 7.5508 C 33.1796 8.4648 33.9061 9.1446 34.8202 9.1446 Z M 17.5936 38.2070 C 24.3671 44.9805 32.6171 50.2070 39.3436 50.2070 C 42.3671 50.2070 45.0155 49.1524 47.1483 46.8086 C 48.3903 45.4258 49.1640 43.8086 49.1640 42.2149 C 49.1640 41.0430 48.7186 39.9180 47.5936 39.1211 L 40.4218 34.0117 C 39.3202 33.2617 38.4061 32.8867 37.5624 32.8867 C 36.4843 32.8867 35.5468 33.4961 34.4686 34.5508 L 32.8046 36.1914 C 32.5468 36.4492 32.2186 36.5664 31.9139 36.5664 C 31.5390 36.5664 31.2108 36.4258 30.9530 36.3086 C 29.5233 35.5352 27.0390 33.4024 24.7186 31.1055 C 22.4218 28.8086 20.2890 26.3242 19.5390 24.8711 C 19.3983 24.6133 19.2812 24.2852 19.2812 23.9336 C 19.2812 23.6289 19.3749 23.3242 19.6327 23.0664 L 21.2733 21.3555 C 22.3280 20.2774 22.9374 19.3399 22.9374 18.2617 C 22.9374 17.4180 22.5624 16.5039 21.7890 15.4024 L 16.7499 8.3008 C 15.9296 7.1758 14.7812 6.6836 13.5155 6.6836 C 11.9686 6.6836 10.3514 7.3867 8.9921 8.7227 C 6.7186 10.9024 5.7108 13.5977 5.7108 16.5742 C 5.7108 23.3008 10.8436 31.4570 17.5936 38.2070 Z" />

            </svg>
        } else if (v.type === 'tried') {
            return <svg fill="currentColor" className="w-full h-full " viewBox="0 0 56 56" xmlns="http://www.w3.org/2000/svg">

                <path xmlns="http://www.w3.org/2000/svg" d="M 32.5233 25.3867 L 46.1405 25.3867 C 47.1014 25.3867 47.8514 24.6133 47.8046 23.6524 C 47.7577 22.7383 47.0546 22.0586 46.1405 22.0586 L 42.5780 22.0586 L 35.6874 22.4336 L 39.6249 18.8477 L 49.7266 8.7227 C 50.1015 8.3477 50.2892 7.9258 50.2892 7.4336 C 50.2892 6.5195 49.5154 5.7930 48.5309 5.7930 C 48.0624 5.7930 47.6639 5.9570 47.3124 6.3086 L 37.2343 16.4336 L 33.6249 20.3242 L 34.0233 13.4570 L 34.0233 9.9648 C 34.0233 9.0508 33.3202 8.3477 32.4061 8.3008 C 31.4686 8.2539 30.6718 9.0039 30.6718 9.9648 L 30.6718 23.5352 C 30.6718 24.7774 31.2812 25.3867 32.5233 25.3867 Z M 17.5936 38.2070 C 24.3671 44.9805 32.6171 50.2070 39.3436 50.2070 C 42.3671 50.2070 45.0155 49.1524 47.1483 46.8086 C 48.3903 45.4258 49.1640 43.8086 49.1640 42.2149 C 49.1640 41.0430 48.7186 39.9180 47.5936 39.1211 L 40.4218 34.0117 C 39.3202 33.2617 38.4061 32.8867 37.5624 32.8867 C 36.4843 32.8867 35.5468 33.4961 34.4686 34.5508 L 32.8046 36.1914 C 32.5468 36.4492 32.2186 36.5664 31.9139 36.5664 C 31.5390 36.5664 31.2108 36.4258 30.9530 36.3086 C 29.5233 35.5352 27.0390 33.4024 24.7186 31.1055 C 22.4218 28.8086 20.2890 26.3242 19.5390 24.8711 C 19.3983 24.6133 19.2812 24.2852 19.2812 23.9336 C 19.2812 23.6289 19.3749 23.3242 19.6327 23.0664 L 21.2733 21.3555 C 22.3280 20.2774 22.9374 19.3399 22.9374 18.2617 C 22.9374 17.4180 22.5624 16.5039 21.7890 15.4024 L 16.7499 8.3008 C 15.9296 7.1758 14.7812 6.6836 13.5155 6.6836 C 11.9686 6.6836 10.3514 7.3867 8.9921 8.7227 C 6.7186 10.9024 5.7108 13.5977 5.7108 16.5742 C 5.7108 23.3008 10.8436 31.4570 17.5936 38.2070 Z" />

            </svg>
        } else if (v.type === 'answer') {
            return <svg fill="lime" className="w-full h-full " viewBox="0 0 56 56" xmlns="http://www.w3.org/2000/svg">

                <path xmlns="http://www.w3.org/2000/svg" d="M 32.5233 25.3867 L 46.1405 25.3867 C 47.1014 25.3867 47.8514 24.6133 47.8046 23.6524 C 47.7577 22.7383 47.0546 22.0586 46.1405 22.0586 L 42.5780 22.0586 L 35.6874 22.4336 L 39.6249 18.8477 L 49.7266 8.7227 C 50.1015 8.3477 50.2892 7.9258 50.2892 7.4336 C 50.2892 6.5195 49.5154 5.7930 48.5309 5.7930 C 48.0624 5.7930 47.6639 5.9570 47.3124 6.3086 L 37.2343 16.4336 L 33.6249 20.3242 L 34.0233 13.4570 L 34.0233 9.9648 C 34.0233 9.0508 33.3202 8.3477 32.4061 8.3008 C 31.4686 8.2539 30.6718 9.0039 30.6718 9.9648 L 30.6718 23.5352 C 30.6718 24.7774 31.2812 25.3867 32.5233 25.3867 Z M 17.5936 38.2070 C 24.3671 44.9805 32.6171 50.2070 39.3436 50.2070 C 42.3671 50.2070 45.0155 49.1524 47.1483 46.8086 C 48.3903 45.4258 49.1640 43.8086 49.1640 42.2149 C 49.1640 41.0430 48.7186 39.9180 47.5936 39.1211 L 40.4218 34.0117 C 39.3202 33.2617 38.4061 32.8867 37.5624 32.8867 C 36.4843 32.8867 35.5468 33.4961 34.4686 34.5508 L 32.8046 36.1914 C 32.5468 36.4492 32.2186 36.5664 31.9139 36.5664 C 31.5390 36.5664 31.2108 36.4258 30.9530 36.3086 C 29.5233 35.5352 27.0390 33.4024 24.7186 31.1055 C 22.4218 28.8086 20.2890 26.3242 19.5390 24.8711 C 19.3983 24.6133 19.2812 24.2852 19.2812 23.9336 C 19.2812 23.6289 19.3749 23.3242 19.6327 23.0664 L 21.2733 21.3555 C 22.3280 20.2774 22.9374 19.3399 22.9374 18.2617 C 22.9374 17.4180 22.5624 16.5039 21.7890 15.4024 L 16.7499 8.3008 C 15.9296 7.1758 14.7812 6.6836 13.5155 6.6836 C 11.9686 6.6836 10.3514 7.3867 8.9921 8.7227 C 6.7186 10.9024 5.7108 13.5977 5.7108 16.5742 C 5.7108 23.3008 10.8436 31.4570 17.5936 38.2070 Z" />

            </svg>
        } else if (v.type === 'answered') {
            return <svg fill="lime" className="w-full h-full " viewBox="0 0 56 56" xmlns="http://www.w3.org/2000/svg">

                <path xmlns="http://www.w3.org/2000/svg" d="M 34.8202 9.1446 L 38.3592 9.1446 L 45.2499 8.7695 L 41.3124 12.3555 L 31.2343 22.4805 C 30.8358 22.8555 30.6718 23.2774 30.6718 23.7695 C 30.6718 24.6836 31.4218 25.3867 32.4296 25.3867 C 32.8983 25.3867 33.2968 25.2461 33.6483 24.8946 L 43.7265 14.7695 L 47.3124 10.8789 L 46.9374 17.7461 L 46.9374 21.2383 C 46.9374 22.1524 47.6171 22.8555 48.5309 22.9024 C 49.4688 22.9492 50.2892 22.1992 50.2892 21.2383 L 50.2892 7.6680 C 50.2892 6.4258 49.6796 5.7930 48.4373 5.7930 L 34.8202 5.7930 C 33.8592 5.7930 33.0858 6.5899 33.1327 7.5508 C 33.1796 8.4648 33.9061 9.1446 34.8202 9.1446 Z M 17.5936 38.2070 C 24.3671 44.9805 32.6171 50.2070 39.3436 50.2070 C 42.3671 50.2070 45.0155 49.1524 47.1483 46.8086 C 48.3903 45.4258 49.1640 43.8086 49.1640 42.2149 C 49.1640 41.0430 48.7186 39.9180 47.5936 39.1211 L 40.4218 34.0117 C 39.3202 33.2617 38.4061 32.8867 37.5624 32.8867 C 36.4843 32.8867 35.5468 33.4961 34.4686 34.5508 L 32.8046 36.1914 C 32.5468 36.4492 32.2186 36.5664 31.9139 36.5664 C 31.5390 36.5664 31.2108 36.4258 30.9530 36.3086 C 29.5233 35.5352 27.0390 33.4024 24.7186 31.1055 C 22.4218 28.8086 20.2890 26.3242 19.5390 24.8711 C 19.3983 24.6133 19.2812 24.2852 19.2812 23.9336 C 19.2812 23.6289 19.3749 23.3242 19.6327 23.0664 L 21.2733 21.3555 C 22.3280 20.2774 22.9374 19.3399 22.9374 18.2617 C 22.9374 17.4180 22.5624 16.5039 21.7890 15.4024 L 16.7499 8.3008 C 15.9296 7.1758 14.7812 6.6836 13.5155 6.6836 C 11.9686 6.6836 10.3514 7.3867 8.9921 8.7227 C 6.7186 10.9024 5.7108 13.5977 5.7108 16.5742 C 5.7108 23.3008 10.8436 31.4570 17.5936 38.2070 Z" />

            </svg>
        }
    }

    return (
        <div className="w-full h-full p-2 flex relative">
            <div className="h-full w-full ">
                <div className="w-full h-full">
                    <form className="flex text-white w-full justify-between pb-2" onSubmit={(e) => submit(e)}>
                        <div className="w-full relative">
                            <input type="text" id="small-input"
                                placeholder="Wpisz numer telefonu"
                                className="
                            bg-black
                            bg-opacity-20
                            placeholder:text-white
                            focus:outline-none
                            block p-2 w-full text-white  rounded-lg sm:text-xs "/>
                            <div className="
                                bg-blue-700
                                bg-opacity-40
                                transition-all
                                hover:bg-opacity-80
                                placeholder:text-white
                                p-2  text-white  rounded-lg sm:text-xs
                            absolute right-0 top-0 flex">
                                <svg fill="currentColor" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" className="w-8 h-4
                                " viewBox="0 0 100 100" enable-background="new 0 0 100 100" >
                                    <path d="M77.7,63.9l-6.2-5c-2.1-1.7-5.1-1.801-7.3-0.2L58.3,63c-0.8,0.6-1.899,0.5-2.6-0.2L46,54l-8.9-9.8  c-0.7-0.7-0.8-1.8-0.2-2.6l4.3-5.9c1.6-2.2,1.5-5.2-0.2-7.3l-5-6.2c-2.2-2.8-6.4-3-8.9-0.5l-5.4,5.4c-1.2,1.2-1.8,2.9-1.8,4.5  c0.7,12.7,6.5,24.8,15,33.3s20.5,14.3,33.3,15c1.7,0.1,3.3-0.601,4.5-1.801L78.1,72.7C80.8,70.3,80.5,66.1,77.7,63.9z" />
                                </svg>
                                <input type="submit"
                                    value="Zadzwoń" />
                            </div>
                        </div>
                    </form>
                    <div className="w-full h-fit place-content-start grid grid-cols-1 gap-2">
                        {calls.map((v, i) => {
                            return <Link to={`/call/`+v.number+'/true'} className="w-full text-white">
                                <div className="w-full h-auto relative">
                                    <div className="bg-slate-900 bg-opacity-50 text-slate-100 px-5 py-3.5 rounded-lg shadow hover:shadow-xl max-w-sm mx-auto transform hover:-translate-y-[0.125rem] transition duration-100 ease-linear">
                                        <div className="flex items-center rounded-lg cursor-pointer">
                                            <div className="w-full flex items-center justify-center">
                                                <div className='w-1/4 text-red-500'>
                                                    {getIcon(v)}
                                                </div>
                                                <div className="w-3/4 ">
                                                    <p className="text-md truncate">{v.name || v.number}</p>
                                                    <p className="text-base text-gray-400  truncate p-1 italic">{v.number}</p>
                                                    <p className="text-sm text-blue-400 font-medium ">{new Date(v.time).toLocaleString()}</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </Link>
                        })}
                    </div>
                </div>
            </div>
        </div>
    )
}